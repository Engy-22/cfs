-- QUERY USED TO POPULATE 2011 GAMES FOR TEST SIMULATION
insert ignore into games (
 select season, week, 'CFS20042010v2', NULL, NULL, gm_date, gm_day,
        t1_name, t1_score, t1_last, site, t2_name, t2_score, t2_last, notes
   from past_games
   where season='2011'
      and t1_name in ( select name from stats where season='2011' )
      and t2_name in ( select name from stats where season='2011' )
);



-- export CSV of prediction results
SELECT gm_date, game_type, game, game_result, prediction_result, notes
INTO OUTFILE '/tmp/2011-prediction-results.csv'
FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '"'
ESCAPED BY '\\'
LINES TERMINATED BY '\n'
FROM v_game_results WHERE season='2011';


-- view of performance by month
SELECT DISTINCT(MONTH(gm_date)) as month,
	COUNT( CASE WHEN prediction_result='CORRECT' THEN 1 END ) as correct,
	COUNT( CASE WHEN prediction_result='INCORRECT' THEN 1 END ) as incorrect
FROM
	v_game_results
WHERE
	game_type!='Bowl'
GROUP BY
	month;

-- view of performance by week
SELECT
	week,
	COUNT(1) as games,
	COUNT( CASE WHEN prediction_result='CORRECT' THEN 1 END ) as correct,
	COUNT( CASE WHEN prediction_result='INCORRECT' THEN 1 END ) as incorrect
FROM
	v_game_results
WHERE
	season='2012'
GROUP BY
	week;

SELECT
	week,
	COUNT(1) as games,
	COUNT( CASE WHEN prediction_result='CORRECT' THEN 1 END ) as correct,
	COUNT( CASE WHEN prediction_result='INCORRECT' THEN 1 END ) as incorrect,
	COUNT( CASE WHEN prediction_result='PUSH' THEN 1 END ) as push
FROM
	v_game_results_ats
WHERE
	season='2012'
GROUP BY
	week;

-- view of performance by absolute value of prediction
SELECT
	CASE
		WHEN ABS(line_pred_diff) > 3 THEN 3.5
		ELSE ABS(line_pred_diff)
	END as abs_line_pred_diff,
	COUNT( CASE WHEN prediction_result='CORRECT' THEN 1 END ) /
		COUNT( CASE WHEN prediction_result IN ('CORRECT','INCORRECT') THEN 1 END) as pct,
	COUNT( 1 ) as count,
	COUNT( CASE WHEN prediction_result='CORRECT' THEN 1 END ) as correct,
	COUNT( CASE WHEN prediction_result='INCORRECT' THEN 1 END ) as incorrect,
	COUNT( CASE WHEN prediction_result='PUSH' THEN 1 END ) as push
FROM
	v_game_results_ats
WHERE
	season='2012'
-- 	game_type!='Bowl'
GROUP BY
	abs_line_pred_diff
ORDER BY abs_line_pred_diff DESC;

SELECT
	-- CASE
	-- 	WHEN abs_pred <= 3 THEN 'A: 0-3'
	-- 	WHEN abs_pred > 3 AND abs_pred <= 7 THEN 'B: 4-7'
	-- 	WHEN abs_pred > 7 AND abs_pred <= 14 THEN 'C: 8-14'
	-- 	ELSE 'D: 14+' END as prediction_value,
	CASE
	 	WHEN abs_pred < 17 THEN abs_pred
		ELSE '17+' END as prediction_value,
	COUNT( CASE WHEN prediction_result='CORRECT' THEN 1 END ) / COUNT(1) as pct,
	COUNT( 1 ) as count,
	COUNT( CASE WHEN prediction_result='CORRECT' THEN 1 END ) as correct,
	COUNT( CASE WHEN prediction_result='INCORRECT' THEN 1 END ) as incorrect
FROM
	v_game_results
WHERE
	season='2012'
-- 	game_type!='Bowl'
GROUP BY
	prediction_value;



-- view of performance vs spread
SELECT
	IF(site='B', 'Bowl', 'Reg Season') as type,
	COUNT(1) as games,
	SUM( IF(
		(prediction > line AND CONVERT(t1_score, SIGNED) - CONVERT(t2_score, SIGNED) > line) OR
		(prediction < line AND CONVERT(t1_score, SIGNED) - CONVERT(t2_score, SIGNED) < line), 1, 0) ) as correct,
	SUM( IF(prediction = line OR CONVERT(t1_score, SIGNED) - CONVERT(t2_score, SIGNED) = line, 1, 0) ) as push,
	SUM( IF(
		(prediction < line AND CONVERT(t1_score, SIGNED) - CONVERT(t2_score, SIGNED) > line) OR
		(prediction > line AND CONVERT(t1_score, SIGNED) - CONVERT(t2_score, SIGNED) < line), 1, 0) ) as incorrect
FROM
	games
WHERE
	season='2011'
GROUP BY type;

-- copy 2011 stats to 2012 for week 1 predictions
INSERT INTO stats (
SELECT
	name, '2012' as season, conference, games, win, loss, ppg, opp_ppg, o_pass_yds,
	o_rush_yds, o_pen_yds, o_to, d_pass_yds, d_rush_yds, d_pen_yds, d_to
FROM
	stats
WHERE
	season='2011' );


-- Georgia Tech rest diff
SELECT
	season,
	gm_date as Date,
	CONCAT( t1_name, IF(site='T1',' @ ', ' vs. '), t2_name ) as Game,
	CASE
		WHEN t1_name = 'Georgia Tech' THEN IF ( t1_score > t2_score, 'Win', 'Loss' )
		ELSE IF ( t2_score > t1_score, 'Win', 'Loss' )
	END as Result,

	CASE
		WHEN t1_name = 'Georgia Tech' THEN DATEDIFF(gm_date,t2_last)
		ELSE DATEDIFF(gm_date,t1_last)
	END as OppRest
FROM
	past_games
WHERE
	(( t1_name = 'Georgia Tech' AND DATEDIFF(gm_date,t2_last) > 8 ) OR
	( t2_name = 'Georgia Tech' AND DATEDIFF(gm_date,t1_last) > 8 )) AND
	season >= '2008'
ORDER BY Date ASC;

INSERT INTO stats SET
	name='Washington State',
	season='2012',
	conference='Pac-12',
	games=1,
	win=0,
	loss=1,

	ppg=6,
	opp_ppg=30,

	o_pass_yds=229,
	o_rush_yds=0,
	o_pen_yds=40,
	o_to=2,

	d_pass_yds=303,
	d_rush_yds=123,
	d_pen_yds=33,
	d_to=0;
INSERT INTO stats SET
	name='Brigham Young',
	season='2012',
	conference='Ind',
	games=1,
	win=1,
	loss=0,

	ppg=30,
	opp_ppg=6,

	o_pass_yds=303,
	o_rush_yds=123,
	o_pen_yds=56,
	o_to=0,

	d_pass_yds=229,
	d_rush_yds=0,
	d_pen_yds=56,
	d_to=2;


-- base population of 2012 stats
INSERT INTO stats (name,season,conference) (
SELECT
	name, '2012' as season, conference
FROM
	stats
WHERE
	season='2011' );

UPDATE stats SET conference='SEC' WHERE name='Texas A&M' AND season='2012';
UPDATE stats SET conference='Big 12' WHERE name='TCU' AND season='2012';


-- prediction export
SELECT
	gm_date,
	-- IF ( site = 'B', 'Bowl', 'Reg Season' ) as game_type,

	IF ( prediction < 0,
		CONCAT(
			'<strong>',
			TRIM(t2_name), '</strong> [', ABS(prediction), ']',
			IF ( site = 'T1', ' @ ', ' vs. '),
			TRIM(t1_name)),
		CONCAT(
			TRIM(t2_name),
			IF ( site = 'T1', ' @ ', ' vs. '),
			'<string>',
			TRIM(t1_name), '</strong> [', prediction, ']')
	) as game,
	- line as line,
	notes

FROM
	games

WHERE
	prediction IS NOT NULL AND
	season='2012' AND
	week=2;

-- lock games w/ FCS opponents
UPDATE
	games
SET
	prediction_lock=''
WHERE
	season='2012' AND
	prediction_lock IS NULL AND
	( t1_name NOT IN (SELECT name FROM stats WHERE season='2012') OR
	  t2_name NOT IN (SELECT name FROM stats WHERE season='2012') );


-- view of performance by team
SELECT
	s.name as team,

	COUNT(1) as games,

	SUM(
		CASE WHEN g.prediction < 0 THEN
			IF ( g.t2_score > g.t1_score, 1, 0 )
		WHEN g.prediction > 0 THEN
			IF ( g.t1_score > g.t2_score, 1, 0 )
		ELSE
			0
		END) as correct,

	SUM(
		CASE WHEN g.prediction > 0 THEN
			IF ( g.t2_score > g.t1_score, 1, 0 )
		WHEN g.prediction < 0 THEN
			IF ( g.t1_score > g.t2_score, 1, 0 )
		ELSE
			0
		END) as incorrect,
	
	SUM( IF ( g.prediction = 0, 1, 0 ) ) as no_prediction,

	SUM(
		CASE WHEN g.prediction > g.line THEN
			IF (CONVERT(g.t1_score, SIGNED) - CONVERT(g.t2_score, SIGNED) > g.line, 1, 0)
		WHEN g.prediction < g.line THEN
			IF (CONVERT(g.t1_score, SIGNED) - CONVERT(g.t2_score, SIGNED) < g.line, 1, 0)
		ELSE
			0
		END) as correct_ats,

	SUM(
		CASE WHEN g.prediction < g.line THEN
			IF (CONVERT(g.t1_score, SIGNED) - CONVERT(g.t2_score, SIGNED) > g.line, 1, 0)
		WHEN g.prediction > g.line THEN
			IF (CONVERT(g.t1_score, SIGNED) - CONVERT(g.t2_score, SIGNED) < g.line, 1, 0)
		ELSE
			0
		END) as incorrect_ats,

	SUM( IF (g.prediction = g.line OR CONVERT(g.t1_score, SIGNED) - CONVERT(g.t2_score, SIGNED) = g.line, 1, 0) ) as push_ats

FROM
	games as g,
	stats as s

WHERE
	g.prediction IS NOT NULL AND
	g.t1_score IS NOT NULL AND
	g.t2_score IS NOT NULL AND
	g.season='2012' AND s.season='2012' AND
	( g.t1_name = s.name OR g.t2_name = s.name )

GROUP BY
	team;
